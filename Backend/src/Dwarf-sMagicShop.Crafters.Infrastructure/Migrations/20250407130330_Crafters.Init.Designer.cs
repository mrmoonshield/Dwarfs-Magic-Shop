// <auto-generated />
using System;
using Dwarf_sMagicShop.Crafters.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dwarf_sMagicShop.Crafters.Infrastructure.Migrations
{
    [DbContext(typeof(WriteDbContextCrafters))]
    [Migration("20250407130330_Crafters.Init")]
    partial class CraftersInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("crafters")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dwarf_sMagicShop.Crafters.Domain.Models.Crafter", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("deletion_date");

                    b.Property<int>("Experience")
                        .HasColumnType("integer")
                        .HasColumnName("experience");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nickname");

                    b.HasKey("Id")
                        .HasName("pk_crafters");

                    b.ToTable("crafters", "crafters");
                });

            modelBuilder.Entity("Dwarf_sMagicShop.Crafters.Domain.Models.CrafterBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<Guid>("CrafterId")
                        .HasColumnType("uuid")
                        .HasColumnName("crafter_id");

                    b.HasKey("Id")
                        .HasName("pk_crafter_balance");

                    b.ToTable("crafter_balance", "crafters");
                });

            modelBuilder.Entity("Dwarf_sMagicShop.Crafters.Domain.Models.MagicArtefact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ArtefactStatusType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("artefact_status_type");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<long>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("deletion_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("description");

                    b.Property<string>("Effect")
                        .HasColumnType("text")
                        .HasColumnName("effect");

                    b.Property<string>("HandedAmountType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("handed_amount_type");

                    b.Property<string>("ImageFile")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image_file");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Location")
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<string>("Rare")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rare");

                    b.Property<Guid?>("SpeciesId")
                        .HasColumnType("uuid")
                        .HasColumnName("species_id");

                    b.Property<float>("Weight")
                        .HasColumnType("real")
                        .HasColumnName("weight");

                    b.Property<Guid>("crafter_id")
                        .HasColumnType("uuid")
                        .HasColumnName("crafter_id");

                    b.HasKey("Id")
                        .HasName("pk_magic_artefacts");

                    b.HasIndex("crafter_id")
                        .HasDatabaseName("ix_magic_artefacts_crafter_id");

                    b.ToTable("magic_artefacts", "crafters");
                });

            modelBuilder.Entity("Dwarf_sMagicShop.Species.Domain.Models.ArtefactSpecies", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_artefacts_species");

                    b.ToTable("artefacts_species", "crafters");
                });

            modelBuilder.Entity("Dwarf_sMagicShop.Crafters.Domain.Models.MagicArtefact", b =>
                {
                    b.HasOne("Dwarf_sMagicShop.Crafters.Domain.Models.Crafter", null)
                        .WithMany("Artefacts")
                        .HasForeignKey("crafter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_magic_artefacts_crafters_crafter_id");
                });

            modelBuilder.Entity("Dwarf_sMagicShop.Crafters.Domain.Models.Crafter", b =>
                {
                    b.Navigation("Artefacts");
                });
#pragma warning restore 612, 618
        }
    }
}
